// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/resignin": {
            "post": {
                "description": "Authenticates a user and provides a JWT to Authorize API calls",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Provides a Refresh Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company",
                        "name": "company",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RefreshTokenAWSRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenAWSResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Authenticates a user and provides a JWT to Authorize API calls",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Provides a Sign In",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company",
                        "name": "company",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TokenAWSRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenAWSResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/calculator/allTenors": {
            "post": {
                "description": "Get Calculator All Tenor",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Get All Tenor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application Name",
                        "name": "applicationName",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TenorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TenorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/calculator/perTenor": {
            "post": {
                "description": "Get Calculator Pertenor",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Get Pertenor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application Name",
                        "name": "applicationName",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TenorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TenorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/additionalInsurance": {
            "get": {
                "description": "Get Additional Insurance",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Additional Insurance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/assetCode": {
            "post": {
                "description": "Get Asset Code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Asset Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application Name",
                        "name": "applicationName",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Asset Code Request",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AssetCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AssetCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/branchID": {
            "get": {
                "description": "Get BranchID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get BranchID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "branchCode": {
                                        "type": "string"
                                    },
                                    "branchName": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/brands": {
            "get": {
                "description": "Get Brands",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Brands",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BrandsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/carConditions": {
            "get": {
                "description": "Get Car Condition",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Car Condition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/cities": {
            "get": {
                "description": "Get Cities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Cities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "provinceCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/insuranceTypes": {
            "get": {
                "description": "Get Insurance Types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Insurance Types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/insurances": {
            "get": {
                "description": "Get Insurances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Insurances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dsf Branch ID",
                        "name": "DsfBranchId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Category",
                        "name": "VehicleCategory",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Insurance Type Code",
                        "name": "InsuranceTypeCode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Car Condition",
                        "name": "CarCondition",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InsuranceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/models": {
            "get": {
                "description": "Get Models",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Models",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "brand",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ModelsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/packageNames": {
            "get": {
                "description": "Get Package Names",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Package Names",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application Name",
                        "name": "applicationName",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Asset Code",
                        "name": "assetCode",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch Code",
                        "name": "branchCode",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "carCondition",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/packages": {
            "post": {
                "description": "Get Packages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Packages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application Name",
                        "name": "applicationName",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Package",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PackageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/paymentTypes": {
            "get": {
                "description": "Get Payment Types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Payment Types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/provinces": {
            "get": {
                "description": "Get Province",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Province",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProvincesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/variant": {
            "get": {
                "description": "Get Variants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Variants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Application Name",
                        "name": "applicationName",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.VariantsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/metadata/vehicleCategory": {
            "get": {
                "description": "Get Vehicle Category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metadata"
                ],
                "summary": "Get Vehicle Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/tradein/prediction": {
            "post": {
                "description": "Get Prediction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MRP Tradein"
                ],
                "summary": "Get Prediction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PredictionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PredictionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_soa_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/tradein/regions": {
            "get": {
                "description": "Get Regions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MRP Tradein"
                ],
                "summary": "Get Regions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "province",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetRegionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_soa_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dsf/tradein/vehicles": {
            "get": {
                "description": "Get Vehicle",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MRP Tradein"
                ],
                "summary": "Get Vehicle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "brandName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "modelName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetVehiclesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_soa_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mmid/services/serviceHistory": {
            "post": {
                "description": "Get Service History from Mmid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mmid Service History"
                ],
                "summary": "Get Service History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Service History",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_service_request.ServiceHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ServiceHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mmid/services/serviceHistoryBatch": {
            "post": {
                "description": "Get Service History Batch from Mmid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mmid Service History Batch"
                ],
                "summary": "Get Service History Batch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Service History Batch",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/middleware-mmksi_mmid_service_request.ServiceHistoryRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ServiceHistoryBatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mmid/services/sparepartList": {
            "post": {
                "description": "Get Sparepart List from Mmid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mmid Spareparts List"
                ],
                "summary": "Get Spareparts List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Sparepart List",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/request.SparepartList"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SparepartListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mmksi/getData": {
            "post": {
                "description": "Get Vehicle from MMKSI",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MMKSI Vehicle"
                ],
                "summary": "Get Vehicle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Vehicle",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VehicleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.VehicleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mmksi/vehicle": {
            "post": {
                "description": "Get Vehicle Color from MMKSI",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MMKSI Vehicle"
                ],
                "summary": "Get Vehicle Color",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Vehicle Color",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VehicleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.VehicleColorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/salesforce/services/serviceHistory": {
            "post": {
                "description": "Get Service History from Salesforce",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salesforce Service History"
                ],
                "summary": "Get Service History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Service History",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_salesforce_service_request.ServiceHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ServiceHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/salesforce/services/sparepartSalesHistory": {
            "post": {
                "description": "Get Sparepart Sales History from Salesforce",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salesforce Sparepart Sales History"
                ],
                "summary": "Get Sparepart Sales History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Sparepart Sales History",
                        "name": "requestbody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SparepartSalesHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ServiceHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_mmid_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/soa/metadata/vehicle": {
            "get": {
                "description": "Get Vehicle Master from SOA",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soa Vehicle"
                ],
                "summary": "Get Vehicle Master List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListVehicleMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_soa_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/soa/metadata/vehicle/{assetCode}": {
            "get": {
                "description": "Get Vehicle Master from SOA",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soa Vehicle"
                ],
                "summary": "Get Vehicle Master",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Soa Vehicle",
                        "name": "vehicle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.VehicleMasterByAssetCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware-mmksi_soa_response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "middleware-mmksi_dsf_mrp_response.Vehicle": {
            "type": "object",
            "properties": {
                "BrandId": {
                    "type": "integer"
                },
                "BrandName": {
                    "type": "string"
                },
                "Models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.VehicleModel"
                    }
                }
            }
        },
        "middleware-mmksi_mmid_response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "middleware-mmksi_mmid_service_request.ServiceHistoryRequest": {
            "type": "object",
            "properties": {
                "booking_Code__c": {
                    "type": "string"
                },
                "dealer_code__c": {
                    "type": "string"
                },
                "dnet_ID__c": {
                    "type": "string"
                },
                "mechanic_Name__c": {
                    "type": "string"
                },
                "mechanic_Notes__c": {
                    "type": "string"
                },
                "msp_No__c": {
                    "type": "string"
                },
                "no_Rangka__c": {
                    "type": "string"
                },
                "odometer__c": {
                    "type": "string"
                },
                "service_End_Date__c": {
                    "type": "string"
                },
                "service_End_Time__c": {
                    "type": "string"
                },
                "service_Kind__c": {
                    "type": "string"
                },
                "service_Start_Date__c": {
                    "type": "string"
                },
                "service_Start_Time__c": {
                    "type": "string"
                },
                "service_Type__c": {
                    "type": "string"
                },
                "stall_Code__c": {
                    "type": "string"
                },
                "status__c": {
                    "type": "string"
                },
                "work_Order_Number__c": {
                    "type": "string"
                }
            }
        },
        "middleware-mmksi_mmksi_response.Vehicle": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "VehicleModel_S1": {
                    "type": "string"
                },
                "VehicleType": {
                    "type": "string"
                }
            }
        },
        "middleware-mmksi_salesforce_service_request.ServiceHistoryRequest": {
            "type": "object",
            "properties": {
                "booking_Code__c": {
                    "type": "string"
                },
                "dealer_code__c": {
                    "type": "string"
                },
                "dnet_ID__c": {
                    "type": "string"
                },
                "mechanic_Name__c": {
                    "type": "string"
                },
                "mechanic_Notes__c": {
                    "type": "string"
                },
                "msp_No__c": {
                    "type": "string"
                },
                "no_Rangka__c": {
                    "type": "string"
                },
                "odometer__c": {
                    "type": "string"
                },
                "service_End_Date__c": {
                    "type": "string"
                },
                "service_End_Time__c": {
                    "type": "string"
                },
                "service_Kind__c": {
                    "type": "string"
                },
                "service_Start_Date__c": {
                    "type": "string"
                },
                "service_Start_Time__c": {
                    "type": "string"
                },
                "service_Type__c": {
                    "type": "string"
                },
                "stall_Code__c": {
                    "type": "string"
                },
                "status__c": {
                    "type": "string"
                },
                "work_Order_Number__c": {
                    "type": "string"
                }
            }
        },
        "middleware-mmksi_soa_response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "request.AssetCodeRequest": {
            "type": "object",
            "properties": {
                "brandName": {
                    "type": "string"
                },
                "carCondition": {
                    "type": "string"
                },
                "manufacturedYear": {
                    "type": "string"
                },
                "modelName": {
                    "type": "string"
                },
                "variantName": {
                    "type": "string"
                }
            }
        },
        "request.PackageRequest": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "carCondition": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "packageName": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "request.PredictionRequest": {
            "type": "object",
            "properties": {
                "BRAND": {
                    "type": "string"
                },
                "CITY": {
                    "type": "string"
                },
                "COLOR": {
                    "type": "string"
                },
                "COMPANY": {
                    "type": "string"
                },
                "DISTANCE": {
                    "type": "integer"
                },
                "MODEL": {
                    "type": "string"
                },
                "PROVINCE": {
                    "type": "string"
                },
                "TIPE_PENJUAL": {
                    "type": "string"
                },
                "TRANSMISSION": {
                    "type": "string"
                },
                "VARIANT": {
                    "type": "string"
                },
                "YEAR": {
                    "type": "integer"
                }
            }
        },
        "request.RefreshTokenAWSRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.SparepartList": {
            "type": "object",
            "properties": {
                "campaign_Description__c": {
                    "type": "string"
                },
                "campaign_No__c": {
                    "type": "string"
                },
                "dnet_ID__c": {
                    "type": "string"
                },
                "dnet_Sparepart_ID__c": {
                    "type": "string"
                },
                "is_Campaign__c": {
                    "type": "string"
                },
                "parts_Code__c": {
                    "type": "string"
                },
                "parts_Name__c": {
                    "type": "string"
                },
                "quantity__c": {
                    "type": "string"
                },
                "sales_Price__c": {
                    "type": "string"
                },
                "status__c": {
                    "type": "string"
                },
                "transaction_Date__c": {
                    "type": "string"
                }
            }
        },
        "request.SparepartSalesHistoryRequest": {
            "type": "object",
            "properties": {
                "campaign_Description__c": {
                    "type": "string"
                },
                "campaign_No__c": {
                    "type": "string"
                },
                "dnet_ID__c": {
                    "type": "string"
                },
                "is_Campaign__c": {
                    "type": "string"
                },
                "parts_Code__c": {
                    "type": "string"
                },
                "parts_Name__c": {
                    "type": "string"
                },
                "quantity__c": {
                    "type": "string"
                },
                "sales_Price__c": {
                    "type": "string"
                },
                "salesforceID": {
                    "type": "string"
                },
                "status__c": {
                    "type": "string"
                },
                "transaction_Date__c": {
                    "type": "string"
                }
            }
        },
        "request.TenorRequest": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "carCondition": {
                    "type": "string"
                },
                "caroserie": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "fee": {
                    "$ref": "#/definitions/request.fee"
                },
                "insurances": {
                    "$ref": "#/definitions/request.insurances"
                },
                "loanPackageName": {
                    "type": "string"
                },
                "manufacturedYear": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "paymentType": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "provisionPercentage": {
                    "type": "integer"
                },
                "simulationType": {
                    "type": "string"
                },
                "simulationValue": {
                    "type": "integer"
                },
                "tenorInMonths": {
                    "type": "integer"
                },
                "unitPrice": {
                    "type": "integer"
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "request.TokenAWSRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.VehicleRequest": {
            "type": "object",
            "properties": {
                "find": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.findVehicleRequest"
                    }
                },
                "pages": {
                    "type": "integer"
                },
                "sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.sortVehicleRequest"
                    }
                }
            }
        },
        "request.fee": {
            "type": "object",
            "properties": {
                "adminFee": {
                    "type": "integer"
                },
                "beaPolis": {
                    "type": "integer"
                }
            }
        },
        "request.findVehicleRequest": {
            "type": "object",
            "properties": {
                "MatchType": {
                    "type": "integer"
                },
                "PropertyName": {
                    "type": "string"
                },
                "PropertyValue": {
                    "type": "string"
                },
                "SqlOperation": {
                    "type": "integer"
                }
            }
        },
        "request.insurances": {
            "type": "object",
            "properties": {
                "additionalInsurances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "insuranceType": {
                    "type": "string"
                },
                "lifeInsurance": {
                    "type": "boolean"
                },
                "putAsOnLoan": {
                    "type": "boolean"
                },
                "tanggungJawabPihakKetiga": {
                    "$ref": "#/definitions/request.tanggungJawabPihakKetiga"
                }
            }
        },
        "request.sortVehicleRequest": {
            "type": "object",
            "properties": {
                "SortColumn": {
                    "type": "string"
                },
                "SortDirection": {
                    "type": "integer"
                }
            }
        },
        "request.tanggungJawabPihakKetiga": {
            "type": "object",
            "properties": {
                "isApplied": {
                    "type": "boolean"
                },
                "uangPertanggungan": {
                    "type": "integer"
                }
            }
        },
        "response.Alerts": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.AssetCodeResponse": {
            "type": "object",
            "properties": {
                "originalAssetCode": {
                    "type": "string"
                },
                "targetAssetCode": {
                    "type": "string"
                }
            }
        },
        "response.BrandsResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "recordCount": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.CitiesResponse": {
            "type": "object",
            "properties": {
                "current_total_item": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "total_all_item": {
                    "type": "integer"
                }
            }
        },
        "response.City": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.GetRegionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Province"
                    }
                }
            }
        },
        "response.GetVehiclesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/middleware-mmksi_dsf_mrp_response.Vehicle"
                    }
                }
            }
        },
        "response.InsuranceResponse": {
            "type": "object",
            "properties": {
                "additionalRates": {},
                "basicInsuranceRates": {},
                "loadingRate": {},
                "palprate": {},
                "tjhrates": {}
            }
        },
        "response.ListVehicleMasterResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.VehicleMasterData"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        },
        "response.Meta": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total_data": {
                    "type": "integer"
                },
                "total_page": {
                    "type": "integer"
                }
            }
        },
        "response.ModelsResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "recordCount": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.PredictionResponse": {
            "type": "object",
            "properties": {
                "AveragePrice": {
                    "type": "number"
                },
                "MaxPrice": {
                    "type": "integer"
                },
                "MedianPrice": {
                    "type": "integer"
                },
                "MinPrice": {
                    "type": "integer"
                },
                "ProvinceId": {
                    "type": "integer"
                }
            }
        },
        "response.Province": {
            "type": "object",
            "properties": {
                "Cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.City"
                    }
                },
                "ProvinceId": {
                    "type": "integer"
                },
                "ProvinceName": {
                    "type": "string"
                }
            }
        },
        "response.ProvincesResponse": {
            "type": "object",
            "properties": {
                "current_total_item": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "total_all_item": {
                    "type": "integer"
                }
            }
        },
        "response.ServiceHistoryBatchResponse": {
            "type": "object",
            "properties": {
                "alerts": {
                    "$ref": "#/definitions/response.Alerts"
                },
                "data": {},
                "error": {
                    "type": "boolean"
                }
            }
        },
        "response.ServiceHistoryResponse": {
            "type": "object",
            "properties": {
                "alerts": {
                    "$ref": "#/definitions/response.Alerts"
                },
                "data": {},
                "error": {
                    "type": "boolean"
                }
            }
        },
        "response.SparepartListResponse": {
            "type": "object",
            "properties": {
                "alerts": {
                    "$ref": "#/definitions/response.Alerts"
                },
                "data": {},
                "error": {
                    "type": "boolean"
                }
            }
        },
        "response.TenorResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "statusCode": {
                    "type": "string"
                }
            }
        },
        "response.TokenAWSResponse": {
            "type": "object",
            "properties": {
                "id_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "response.Variant": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.VariantsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "product_model_id": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "recordCount": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "response.VehicleColor": {
            "type": "object",
            "properties": {
                "ColorCode": {
                    "type": "string"
                },
                "ColorDescription": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "VehicleModel_S1": {
                    "type": "string"
                },
                "VehicleType": {
                    "type": "string"
                }
            }
        },
        "response.VehicleColorResponse": {
            "type": "object",
            "properties": {
                "lst": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.VehicleColor"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.VehicleMessageResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.VehicleMasterByAssetCodeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.VehicleMasterData"
                    }
                },
                "total_data": {
                    "type": "integer"
                }
            }
        },
        "response.VehicleMasterData": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "dp_min_max": {
                    "type": "string"
                },
                "dsf_asset_code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mmksi_color": {
                    "type": "string"
                },
                "mmksi_type": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "package": {
                    "type": "string"
                },
                "vehicle_name": {
                    "type": "string"
                }
            }
        },
        "response.VehicleMessageResponse": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "type": "integer"
                },
                "ErrorMessage": {
                    "type": "string"
                }
            }
        },
        "response.VehicleModel": {
            "type": "object",
            "properties": {
                "ModelId": {
                    "type": "integer"
                },
                "ModelName": {
                    "type": "string"
                },
                "Variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Variant"
                    }
                }
            }
        },
        "response.VehicleResponse": {
            "type": "object",
            "properties": {
                "lst": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/middleware-mmksi_mmksi_response.Vehicle"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.VehicleMessageResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
